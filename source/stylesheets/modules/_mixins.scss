/**
 * Mixin
 */

/**
 * RETINA
 *
 * Detect retina / high density pixels screens
 *
 *  @content [Write the style you want to apply to the diagonal edge, and it will be added within the @content directive]
 */
@mixin isRetina {
  @media(-webkit-min-device-pixel-ratio: 1.25),(min-resolution: 120dpi){
    @content
  }

  @media(-webkit-min-device-pixel-ratio: 1.3),(min-resolution: 124.8dpi){
    @content
  }

  @media(-webkit-min-device-pixel-ratio: 1.5),(min-resolution: 144dpi){
    @content
  }
}

@mixin v-center($position) {
  position: $position;
  top: 50%;
  transform: translateY(-50%);
}

@mixin h-center($position) {
  position: $position;
  left: 50%;
  transform: translateX(-50%);
}

@mixin vh-center($position) {
  position: $position;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/**
 * DIAGONAL
 *
 * Generate a diagonal edge on a before pseudo element
 *
 *  $rotation: diagonal degree
 *  $background : background color, image, gradient
 *  $height: height of the edge ( px, %, cm, pc, etc)
 *
 *  @content [Write the style you want to apply to the diagonal edge, and it will be added within the @content directive]
 */
@mixin diagonal($rotation, $background, $height, $imp: false, $pos: after) {
  &:#{$pos} {
    content: '';
    display: block;
    position: absolute;
    width: 100%;
    height: $height;
    background: #{$background};
    @if $imp == 'true' {
      transform: skewY($rotation) !important;
    }
    @else {
      transform: skewY($rotation);
    }
    @content;
  }
}
